datasource db {
  provider = "postgresql"
  url      = "postgresql://kilaeko_owner:npg_6KCb9vrwLPyx@ep-shy-paper-a8ymnliq-pooler.eastus2.azure.neon.tech/kilaeko?sslmode=require"
}

generator client {
  provider = "prisma-client-js"
}

model Subscriber {
  id              String   @id @default(uuid())
  email           String   @unique
  unsubscribeToken String  @unique @default(uuid())
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model EmailTemplate {
  id          String   @id @default(uuid())
  name        String
  subject     String
  content     String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Return {
  id              String         @id @default(cuid())
  orderId         String
  orderNumber     Int
  customerEmail   String
  customerId      String
  status          ReturnStatus   @default(PENDING)
  additionalNotes String?
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  items           ReturnItem[]
}

model ReturnItem {
  id          String   @id @default(uuid())
  returnId    String
  return      Return   @relation(fields: [returnId], references: [id], onDelete: Cascade)
  productName String
  variant     String
  reason      String
  quantity    Int      @default(1)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Review {
  id            String       @id @default(cuid())
  orderId       String
  orderNumber   Int
  customerEmail String
  customerId    String
  customerName  String
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  items         ReviewItem[]
}

model ReviewItem {
  id            String   @id @default(uuid())
  reviewId      String
  review        Review   @relation(fields: [reviewId], references: [id], onDelete: Cascade)
  productName   String
  variant       String
  fitRating     FitRating
  height        String?
  waistSize     String?
  purchasedSize String
  title         String
  description   String
  rating        Int
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

enum ReturnStatus {
  PENDING
  APPROVED
  REJECTED
  COMPLETED
}

enum FitRating {
  RUNS_SMALL
  TRUE_TO_SIZE
  RUNS_LARGE
}

